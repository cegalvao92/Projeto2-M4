// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id          Int     @default(autoincrement()) @id
  nome        String
  imagem      String
  bio         String
  nascimento  String
  senha       String
  criado_em   DateTime    @default(now()) @map("created_at")
  modificado_em   DateTime    @default(now()) @map("modified_at")
  seguidores  Seguidores[]
  seguindo    Seguindo[]
  tweet       Tweet[]
  favorito   FavoritosonUsuario[]
}

model Seguidores {
  id          Int     @default(autoincrement()) @id
  usuarios    Usuario[]   
  usuarioid   Int
  idseguidor  Int  
}

model Seguindo {
  id          Int     @default(autoincrement()) @id
  usuarios     Usuario[]
  usuarioid   Int
  idseguindo  Int     
}

model Tweet {
  id          Int     @default(autoincrement()) @id
  usuarios    Usuario[]
  usuarioid   Int
  texto       String  
  emoji       String
  data_postagem   DateTime    @default(now()) @map("created_at")
  curtidas    Int
  categoria   CategoriaonTweets[]
  conteudo    String
  usuario     FavoritosonUsuario[] 
}

model Categoria {
  id          Int     @default(autoincrement()) @id
  nome        String
  criado_em   DateTime    @default(now()) @map("created_at")
  tweet       CategoriaonTweets[]  
}

model CategoriaonTweets{
  tweet       Tweet @relation(fields: [tweetId], references: [id])
  tweetId     Int
  categoria   Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId     Int
  criado_em   DateTime    @default(now()) @map("created_at")

  @@id([tweetId, categoriaId])   
}

model FavoritosonUsuario{
  tweet       Tweet @relation(fields: [tweetId], references: [id])
  tweetId     Int
  usuario     Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId   Int

  @@id([tweetId, usuarioId])
}